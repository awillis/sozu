<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" vc:minVersion="1.1"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
    xmlns:tt="http://schema.amekoshi.com/2020/12/tmt/template"
    xmlns:abs="http://schema.amekoshi.com/2020/12/tmt/abstract"
    xpathDefaultNamespace="##targetNamespace"
    targetNamespace="http://schema.amekoshi.com/2020/12/tmt/template">
    <import namespace="http://schema.amekoshi.com/2020/12/tmt/abstract"
        schemaLocation="abstract.xsd"/>
    <complexType name="process">
        <complexContent>
            <extension base="abs:stencil"> </extension>
        </complexContent>
    </complexType>
    <complexType name="function">
        <complexContent>
            <extension base="abs:stencil"> </extension>
        </complexContent>
    </complexType>
    <complexType name="datastore">
        <complexContent>
            <extension base="abs:stencil"> </extension>
        </complexContent>
    </complexType>
    <complexType name="dataflow">
        <complexContent>
            <extension base="abs:stencil"> </extension>
        </complexContent>
    </complexType>
    <complexType name="boundary">
        <complexContent>
            <extension base="abs:stencil">
                <sequence>
                    <element name="type" type="tt:boundaryType"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <simpleType name="boundaryType">
        <restriction base="string">
            <enumeration value="line"/>
            <enumeration value="rectangle"/>
            <enumeration value="ellipse"/>
        </restriction>
    </simpleType>
    <element name="stencil">
        <alternative test="@type = 'process'" type="tt:process"/>
        <alternative test="@type = 'function'" type="tt:function"/>
        <alternative test="@type = 'datastore'" type="tt:datastore"/>
        <alternative test="@type = 'dataflow'" type="tt:dataflow"/>
        <alternative test="@type = 'boundary'" type="tt:boundary"/>
        <alternative type="error"/>
    </element>
    <element name="rule">
        <complexType>
            <sequence>
                <element name="name" type="abs:name"/>
                <element name="description" type="string"/>
                <element name="filter" type="string">
                    <annotation>
                        <documentation>Filter to be applied to stencil attributes. If a match is
                            found, the threat should be regarded as valid for a given
                            model.</documentation>
                    </annotation>
                </element>
            </sequence>
            <attribute name="stencil" type="abs:id" use="required"/>
            <attribute name="threat" type="abs:id" use="required"/>
        </complexType>
    </element>
    <element name="threat">
        <complexType>
            <sequence>
                <element name="name" type="abs:name"/>
            </sequence>
            <attribute name="id" type="abs:id" use="required"/>
        </complexType>
    </element>
    <group name="metadata">
        <sequence>
            <element name="author" type="string"/>
            <element name="id" type="ID"/>
            <element name="name" type="string"/>
            <element name="version" type="positiveInteger"/>
        </sequence>
    </group>
    <group name="template">
        <sequence>
            <group ref="tt:metadata"/>
            <element name="stencils">
                <complexType>
                    <sequence maxOccurs="unbounded">
                        <element ref="tt:stencil"/>
                    </sequence>
                </complexType>
                <unique name="uniqueStencil">
                    <selector xpath="tt:stencil"/>
                    <field xpath="@id"/>
                </unique>
            </element>
            <element name="ruleset">
                <complexType>
                    <sequence maxOccurs="unbounded">
                        <element ref="tt:rule"/>
                    </sequence>
                </complexType>
                <unique name="uniqueRule">
                    <selector xpath="tt:rule"/>
                    <field xpath="@stencil"/>
                    <field xpath="@threat"/>
                </unique>
            </element>
            <element name="threats">
                <complexType>
                    <sequence maxOccurs="unbounded">
                        <element ref="tt:threat"/>
                    </sequence>
                </complexType>
                <unique name="uniqueThreat">
                    <selector xpath="threat"/>
                    <field xpath="@id"/>
                </unique>
            </element>
        </sequence>
    </group>
    <element name="template">
        <complexType>
            <group ref="tt:template"/>
        </complexType>
        <keyref name="stencilKeyRef" refer="tt:uniqueStencil">
            <selector xpath="ruleset/rule"/>
            <field xpath="@stencil"/>
        </keyref>
        <keyref name="threatKeyRef" refer="tt:uniqueThreat">
            <selector xpath="ruleset/rule"/>
            <field xpath="@threat"/>
        </keyref>
    </element>
</schema>
